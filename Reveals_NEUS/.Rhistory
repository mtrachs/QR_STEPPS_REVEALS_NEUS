install.packages('Bchron')
library(Bchron)
?BchronCalibrate
BchronCalibrate(5126,100,calCurves = 'intcal13')
hae <-BchronCalibrate(5126,100,calCurves = 'intcal13')
hae$Date1$ages
sum(hae$Date1$ageGrid*hae$Date1$densities)
hae <-BchronCalibrate(4806,100,calCurves = 'intcal13')
sum(hae$Date1$ageGrid*hae$Date1$densities)
install.packages('rgdal')
#######################################################################################################################
# in this script we want to numerically compare REVEALS with the PAciorek et al dtaset
# REVEALS assumes homogenous vegetation around depositional site.
# we therefore assign all of a 1 by 1 deg grid cell with the same vegetation and later on compare this to the paciorek et al.
# dataset
#########################################################################################################################
library(maptools)
setwd(paste0(wd,'prediction/'))
help.fun.loc <- 'utils/'
data.loc <- 'output/'
plot.loc <- 'plots/'#'plots_w_full/'
#-----------------------------------------------------------------------------------------------
us.shp <- readShapeLines('data/map_data/us_alb.shp',proj4string=CRS('+init=epsg:3175'))
#-------------------------------
#first load REVEALS data and its coordinates
#-------------------------------
reveals_reconstruction <- readRDS(paste0(wd,'Reveals_NEUS/output/unc_stand_veg_pred_ppe_literature_fallspeed_measured_composition_no_larch_lake_size_correct_dwm_gpm neutral_1e+05_regional_vegetation_aggregated.RDS'))
#define working directory
wd <- '~/r_code_calibration_paper/'
#######################################################################################################################
# in this script we want to numerically compare REVEALS with the PAciorek et al dtaset
# REVEALS assumes homogenous vegetation around depositional site.
# we therefore assign all of a 1 by 1 deg grid cell with the same vegetation and later on compare this to the paciorek et al.
# dataset
#########################################################################################################################
library(maptools)
setwd(paste0(wd,'prediction/'))
help.fun.loc <- 'utils/'
data.loc <- 'output/'
plot.loc <- 'plots/'#'plots_w_full/'
#-----------------------------------------------------------------------------------------------
us.shp <- readShapeLines('data/map_data/us_alb.shp',proj4string=CRS('+init=epsg:3175'))
#-------------------------------
#first load REVEALS data and its coordinates
#-------------------------------
reveals_reconstruction <- readRDS(paste0(wd,'Reveals_NEUS/output/unc_stand_veg_pred_ppe_literature_fallspeed_measured_composition_no_larch_lake_size_correct_dwm_gpm neutral_1e+05_regional_vegetation_aggregated.RDS'))
reveals_coord <- readRDS(paste0(wd,'Reveals_NEUS/output/unc_stand_ratio_pred_ppe_literature_fallspeed_constant_composition_larch_lake_size_correct_dwm_gpm neutral_1e+05_regional_vegetation_aggregated_coord.RDS'))
reveals_median <- reveals_reconstruction[,grep('median',colnames(reveals_reconstruction))]
reveals_mean <- reveals_reconstruction[,grep('mean',colnames(reveals_reconstruction))]
#Transform reveals coordinates in to US coordinates
sputm <- SpatialPoints(reveals_coord[,c('x','y')], proj4string=CRS("+init=epsg:4326"))
spgeo <- spTransform(sputm, CRS("+init=epsg:3175"))
reveals_coord_us <- spgeo@coords
#------------------------------------------------------------------------------------------------------------------------
#########################################################################################################################
bounding_coords <- matrix(ncol=4, nrow = nrow(reveals_coord))
bounding_coords[,1] <- reveals_coord[,'x']-0.5
bounding_coords[,2] <- reveals_coord[,'x']+0.5
bounding_coords[,3] <- reveals_coord[,'y']-0.5
bounding_coords[,4] <- reveals_coord[,'y']+0.5
colnames(bounding_coords) <- c('lon.min','lon.max','lat.min','lat.max')
bounding_coords
reveals_coord
#------------------------------------------------------------------------------------------------------------------------
#########################################################################################################################
bounding_coords <- matrix(ncol=4, nrow = nrow(reveals_coord))
bounding_coords[,1] <- reveals_coord[,'x']-0.5
bounding_coords[,2] <- reveals_coord[,'x']+0.5
bounding_coords[,3] <- reveals_coord[,'y']-0.5
bounding_coords[,4] <- reveals_coord[,'y']+0.5
colnames(bounding_coords) <- c('lon.min','lon.max','lat.min','lat.max')
########################################################################################################################
#reverse transform US coordinates into degrees
#load vegetation coordinates
load(paste(wd,'calibration/data/for_prediction_110_sites_only_abies_new_species.RData',sep=''))
taxa <- colnames(y)
spgeo <- SpatialPoints(veg_coords, proj4string=CRS("+init=epsg:3175"))
sputm <- spTransform(spgeo, CRS("+init=epsg:4326"))
veg_coords_utm  <- sputm@coords #transformation is successful
colnames(veg_coords_utm) <- c('lon','lat')
coords_assign <-  matrix(ncol = 1,nrow =nrow(veg_coords))
for(x in 1:nrow(bounding_coords)){
coords_assign[((veg_coords_utm[,'lon'] > bounding_coords[x,"lon.min"]) & (veg_coords_utm[,'lon'] < bounding_coords[x,"lon.max"]) &
(veg_coords_utm[,'lat'] > bounding_coords[x,"lat.min"]) & (veg_coords_utm[,'lat'] < bounding_coords[x,"lat.max"]))] <- x
}
taxa_plot <- c('Beech','Hemlock','Oak','Spruce')
colours <- rev(brewer.pal(10,'RdYlBu'))
east <- sort(unique(veg_coords[,'meters.east']))
library(RColorBrewer)
taxa_plot <- c('Beech','Hemlock','Oak','Spruce')
colours <- rev(brewer.pal(10,'RdYlBu'))
east <- sort(unique(veg_coords[,'meters.east']))
north <- sort(unique(veg_coords[,'meters.north']))
breaks <- c(0,0.01,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,1)
breaks1 <- c(0,0.01,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,0.7)
breaks2 <- c(0,0.01,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,NA)
taxa[grep('Other',taxa)] <- c('Other_conifer','Other_hardwood')
sapply(taxa[c(1:3,5:12)],function(y){
categories <- cut(reveals_mean[,grep(y,colnames(reveals_mean))]/100,breaks,include.lowest = TRUE,labels = FALSE)
colours.plot <- colours[categories]
colours.plot.final <- matrix(ncol=1, nrow=length(coords_assign))
for(i in 1:length(colours.plot)){
colours.plot.final[coords_assign==i] <- colours.plot[i]
}
colours.plot.final[is.na(colours.plot.final)] <- 'gray'
plot(us.shp,xlim=range(east),ylim=range(north),main =y,cex.main = 2)
points(veg_coords,col=colours.plot.final,pch = 15,cex=0.5)
#points(pollen_coord_us,col=1,pch = 16,cex = 0.75)
plot(us.shp,add=TRUE)
})
reveals_gridded <- matrix(ncol=11,nrow=nrow(veg_coords))
for(i in 1:nrow(reveals_mean)){
for(ii in 1:ncol(reveals_mean)){
reveals_gridded[coords_assign==i,ii] <-  reveals_mean[i,ii]/100
}
}
colnames(reveals_gridded) <- colnames(reveals_mean)
saveRDS(reveals_gridded,paste0(wd,'Reveals_NEUS/data/reveals_mean_gridded.RDS'))
#load data
library(rstan)
library(RColorBrewer)
library(fields)
library(sp)
library(maptools)
library(colorRamps)
library(rioja)
#-----------------------------------------------------------------------------------------------
setwd(paste0(wd,'prediction/'))
help.fun.loc <- 'utils/'
data.loc <- 'output_nb//'
plot.loc <- 'plots/'
#-----------------------------------------------------------------------------------------------
us.shp <- readShapeLines('data/map_data/us_alb.shp',proj4string=CRS('+init=epsg:3175'))
#-----------------------------------------------------------------------------------------------
taxa <- sort(c('Maple','Birch','Hickory','Chestnut','Other conifer','Other hardwood',
'Beech','Ash','Tamarack','Spruce','Pine','Oak','Hemlock'))
K <- length(taxa)
proc.output.loc <- 'process_output/'
mean.proportion <- readRDS(paste(proc.output.loc,'combined_mean.RDS',sep=''))
median.proportion <-readRDS(paste(proc.output.loc,'combined_median.RDS',sep=''))
lb.proportion <- readRDS(paste(proc.output.loc,'combined_lb.RDS',sep=''))
ub.proportion <- readRDS(paste(proc.output.loc,'combined_ub.RDS',sep=''))
#--------------------------------------------------------------------------------------------------------------------------
#load vegetation data
load(paste0(wd,'calibration/data/for_prediction_110_sites_only_abies_new_species.RData'))
r <- readRDS(paste0(wd,'calibration/data/veg_mean_dissimilarity.RDS'))
mean.rec.sqrt <- sqrt(mean.proportion)
mean.obs.sqrt <- sqrt(r)
#-------------------------------------------------------------------------------
core.loc.rec <- mean.rec.sqrt[unique(idx_cores),]
core.loc.obs <- mean.obs.sqrt[unique(idx_cores),]
dissimilarity.dep.sites <-
sapply(1:nrow(core.loc.rec),function(x){
as.matrix(paldist((rbind(core.loc.rec[x,],core.loc.obs[x,])),dist.method='euclidean'))[1,2]
})
#--------------------------------------------------------------------------------
other.loc.rec <- mean.rec.sqrt[!(1:nrow(mean.rec.sqrt))%in%unique(idx_cores),]
other.loc.obs <- mean.obs.sqrt[!(1:nrow(mean.obs.sqrt))%in%unique(idx_cores),]
dissimilarity.other.sites <-
sapply(1:nrow(other.loc.rec),function(x){
as.matrix(paldist((rbind(other.loc.rec[x,],other.loc.obs[x,])),dist.method='euclidean'))[1,2]
})
#----------------------------------------------------------------------------------
#compare means
mean.other <- mean(dissimilarity.other.sites)
mean.dep <- mean(dissimilarity.dep.sites)
t.test(dissimilarity.other.sites^2,dissimilarity.dep.sites^2)
dissimilarity.tot <-
sapply(1:nrow(mean.rec.sqrt),function(x){
as.matrix(paldist(rbind(mean.proportion[x,],r[x,])))[1,2]
})
dissimilarity.tot
mean(dissimilarity.tot)
#####################################################################################################################
# plot dissimilarities
#####################################################################################################################
breaks <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,1)
categories <- cut(dissimilarity.tot,breaks,include.lowest = TRUE,labels = FALSE)
colours <- rev(brewer.pal(10,'RdYlBu'))
colours.plot <- colours[categories]
east <- sort(unique(veg_coords[,'meters.east']))
north <- sort(unique(veg_coords[,'meters.north']))
breaks1 <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,0.7)
breaks2 <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,NA)
sputm <- SpatialPoints(pollen_coords, proj4string=CRS("+init=epsg:4326"))
spgeo <- spTransform(sputm, CRS("+init=epsg:3175"))
pollen_coord_us <- spgeo@coords
x1 <- '110_sites_umw'#strsplit(x,'.csv')[[1]][1]
par(oma=c(1,1,1,2),cex = 0.8,cex.axis = 0.8)
plot(us.shp,xlim=range(east),ylim=range(north),main= "Dissimilarity Map")
image.plot(east, north,z = matrix(ncol= length(north),rep(-1,length(east)*length(north))),zlim=c(0,0.7),col = colours,
breaks= breaks1,lab.breaks = breaks2,cex.axis = 0.8,add=TRUE,legend.lab = 'Sq. Chord Distance',legend.line = 2.5)
points(veg_coords,col=colours.plot,pch = 15)
plot(us.shp,add=TRUE)
points(pollen_coord_us,col=1,pch = 16,cex = 0.75)
#---------------------------------------------------------------------------------------------------------------------
#load REVEALS predictions
reveals_gridded <- readRDS(paste0(wd,'Reveals_NEUS/data/reveals_mean_gridded.RDS'))
colnames(reveals_gridded) <- unlist(strsplit(colnames(reveals_gridded),'[.]'))[seq(1,2*ncol(reveals_gridded),2)]
colnames(reveals_gridded)[grep('Other',colnames(reveals_gridded))] <- c('Other conifer','Other hardwood')
#again load meanof Paciorek et al.
r <- readRDS(paste0(wd,'calibration/data/veg_mean_dissimilarity.RDS'))
r_reveals <- r[,colnames(r)%in%colnames(reveals_gridded)]
r_reveals <- r_reveals[!is.na(reveals_gridded[,"Beech"]),]
r_reveals <- r_reveals/rowSums(r_reveals)
reveals_gridded_complete <- reveals_gridded[!is.na(reveals_gridded[,"Beech"]),]
reveals_gridded_complete
dissimilarity.reveals <-
sapply(1:nrow(r_reveals),function(x){
as.matrix(paldist(rbind(r_reveals[x,],reveals_gridded_complete[x,])))[1,2]
})
dissimilarity.reveals
mean(dissimilarity.reveals)
#---------------------------------------------------------------------------------------------------------------------
stepps_11_taxa <- mean.proportion[,colnames(mean.proportion)%in%colnames(reveals_gridded)]
stepps_11_taxa <- stepps_11_taxa/rowSums(stepps_11_taxa)
stepps_11_taxa_coverage_reveals <- stepps_11_taxa[!is.na(reveals_gridded[,"Beech"]),]
r_11_taxa <- r[,colnames(r)%in%colnames(reveals_gridded)]
r_11_taxa <- r_11_taxa/rowSums(r_11_taxa)
dissimilarity.stepps_11_taxa<-
sapply(1:nrow(r_11_taxa),function(x){
as.matrix(paldist(rbind(r_11_taxa [x,],stepps_11_taxa[x,])))[1,2]
})
t.test(dissimilarity.reveals,dissimilarity.stepps_11_taxa)
dissimilarity.stepps_11_taxa_coverage_reveals<-
sapply(1:nrow(r_reveals),function(x){
as.matrix(paldist(rbind(r_reveals[x,],stepps_11_taxa_coverage_reveals[x,])))[1,2]
})
t.test(dissimilarity.reveals,dissimilarity.stepps_11_taxa_coverage_reveals,paired=TRUE)
######################################################################################################################
#
######################################################################################################################
comparison_dissimilarities <- cbind(summary(dissimilarity.tot),
summary(dissimilarity.stepps_11_taxa_coverage_reveals),
summary(dissimilarity.reveals))
comparison_dissimilarities
#load data
library(rstan)
library(RColorBrewer)
library(fields)
library(sp)
library(maptools)
library(colorRamps)
library(rioja)
#-----------------------------------------------------------------------------------------------
setwd('~/workflow_stepps_calibration/prediction/')
help.fun.loc <- 'utils/'
data.loc <- 'output_nb//'
plot.loc <- 'plots_nb/'#'plots_w_full/'
#-----------------------------------------------------------------------------------------------
us.shp <- readShapeLines('data/map_data/us_alb.shp',proj4string=CRS('+init=epsg:3175'))
#-----------------------------------------------------------------------------------------------
taxa <- sort(c('Maple','Birch','Hickory','Chestnut','Other conifer','Other hardwood',
'Beech','Ash','Tamarack','Spruce','Pine','Oak','Hemlock'))
K <- length(taxa)
#     uncertainty <- apply(prop.site,2,function(x) quantile(x,probs=c(0.025,0.5,0.975)))
#     data.frame(mean.proportion = prop.mean.site,median = uncertainty['50%',],lb = uncertainty['2.5%',],ub = uncertainty['97.5%',])
#   })
# summary.proportion <- t(summary.proportion)
#
# mean.proportion <- matrix(ncol=K,unlist(summary.proportion[,'mean.proportion']),byrow=TRUE)
# colnames(mean.proportion) <- taxa
#
# median.proportion <- matrix(ncol=K,unlist(summary.proportion[,'median']),byrow=TRUE)
# colnames(median.proportion) <- taxa
proc.output.loc <- 'process_output/'
mean.proportion <- readRDS(paste(proc.output.loc,'combined_mean.RDS',sep=''))
median.proportion <-readRDS(paste(proc.output.loc,'combined_median.RDS',sep=''))
lb.proportion <- readRDS(paste(proc.output.loc,'combined_lb.RDS',sep=''))
ub.proportion <- readRDS(paste(proc.output.loc,'combined_ub.RDS',sep=''))
#--------------------------------------------------------------------------------------------------------------------------
#load vegetation data
load('~/workflow_stepps_calibration/calibration/data/for_prediction_110_sites_only_abies_new_species.RData')
#load('~/workflow_stepps_calibration/calibration/data/')
r <- readRDS('~/workflow_stepps_calibration/calibration/data/veg_mean_dissimilarity.RDS')
mean.rec.sqrt <- sqrt(mean.proportion)
mean.obs.sqrt <- sqrt(r)
#-------------------------------------------------------------------------------
core.loc.rec <- mean.rec.sqrt[unique(idx_cores),]
core.loc.obs <- mean.obs.sqrt[unique(idx_cores),]
dissimilarity.dep.sites <-
sapply(1:nrow(core.loc.rec),function(x){
as.matrix(paldist((rbind(core.loc.rec[x,],core.loc.obs[x,])),dist.method='euclidean'))[1,2]
})
#--------------------------------------------------------------------------------
other.loc.rec <- mean.rec.sqrt[!(1:nrow(mean.rec.sqrt))%in%unique(idx_cores),]
other.loc.obs <- mean.obs.sqrt[!(1:nrow(mean.obs.sqrt))%in%unique(idx_cores),]
dissimilarity.other.sites <-
sapply(1:nrow(other.loc.rec),function(x){
as.matrix(paldist((rbind(other.loc.rec[x,],other.loc.obs[x,])),dist.method='euclidean'))[1,2]
})
#----------------------------------------------------------------------------------
#compare means
mean.other <- mean(dissimilarity.other.sites)
mean.dep <- mean(dissimilarity.dep.sites)
t.test(dissimilarity.other.sites^2,dissimilarity.dep.sites^2)
dissimilarity.tot <-
sapply(1:nrow(mean.rec.sqrt),function(x){
as.matrix(paldist(rbind(mean.proportion[x,],r[x,])))[1,2]
})
#####################################################################################################################
# plot dissimilarities
#####################################################################################################################
breaks <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,1)
categories <- cut(dissimilarity.tot,breaks,include.lowest = TRUE,labels = FALSE)
colours <- rev(brewer.pal(10,'RdYlBu'))
colours.plot <- colours[categories]
east <- sort(unique(veg_coords[,'meters.east']))
north <- sort(unique(veg_coords[,'meters.north']))
breaks1 <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,0.7)
breaks2 <- 2*c(0,0.025,0.05,0.1,0.15,0.2,0.3,0.4,0.5,0.6,NA)
sputm <- SpatialPoints(pollen_coords, proj4string=CRS("+init=epsg:4326"))
spgeo <- spTransform(sputm, CRS("+init=epsg:3175"))
pollen_coord_us <- spgeo@coords
x1 <- '110_sites_umw'#strsplit(x,'.csv')[[1]][1]
par(oma=c(1,1,1,2),cex = 0.8,cex.axis = 0.8)
plot(us.shp,xlim=range(east),ylim=range(north),main= "Dissimilarity Map")
image.plot(east, north,z = matrix(ncol= length(north),rep(-1,length(east)*length(north))),zlim=c(0,0.7),col = colours,
breaks= breaks1,lab.breaks = breaks2,cex.axis = 0.8,add=TRUE,legend.lab = 'Sq. Chord Distance',legend.line = 2.5)
points(veg_coords,col=colours.plot,pch = 15)
plot(us.shp,add=TRUE)
points(pollen_coord_us,col=1,pch = 16,cex = 0.75)
#---------------------------------------------------------------------------------------------------------------------
#load REVEALS predictions
reveals_gridded <- readRDS('~/Reveals_NEUS/data/reveals_mean_gridded.RDS')
colnames(reveals_gridded) <- unlist(strsplit(colnames(reveals_gridded),'[.]'))[seq(1,2*ncol(reveals_gridded),2)]
colnames(reveals_gridded)[grep('Other',colnames(reveals_gridded))] <- c('Other conifer','Other hardwood')
#again load meanof Paciorek et al.
r <- readRDS('~/workflow_stepps_calibration/calibration/data/veg_mean_dissimilarity.RDS')
r_reveals <- r[,colnames(r)%in%colnames(reveals_gridded)]
r_reveals <- r_reveals[!is.na(reveals_gridded[,"Beech"]),]
r_reveals <- r_reveals/rowSums(r_reveals)
reveals_gridded_complete <- reveals_gridded[!is.na(reveals_gridded[,"Beech"]),]
dissimilarity.reveals <-
sapply(1:nrow(r_reveals),function(x){
as.matrix(paldist(rbind(r_reveals[x,],reveals_gridded_complete[x,])))[1,2]
})
#---------------------------------------------------------------------------------------------------------------------
stepps_11_taxa <- mean.proportion[,colnames(mean.proportion)%in%colnames(reveals_gridded)]
stepps_11_taxa <- stepps_11_taxa/rowSums(stepps_11_taxa)
stepps_11_taxa_coverage_reveals <- stepps_11_taxa[!is.na(reveals_gridded[,"Beech"]),]
r_11_taxa <- r[,colnames(r)%in%colnames(reveals_gridded)]
r_11_taxa <- r_11_taxa/rowSums(r_11_taxa)
dissimilarity.stepps_11_taxa<-
sapply(1:nrow(r_11_taxa),function(x){
as.matrix(paldist(rbind(r_11_taxa [x,],stepps_11_taxa[x,])))[1,2]
})
t.test(dissimilarity.reveals,dissimilarity.stepps_11_taxa)
dissimilarity.stepps_11_taxa_coverage_reveals<-
sapply(1:nrow(r_reveals),function(x){
as.matrix(paldist(rbind(r_reveals[x,],stepps_11_taxa_coverage_reveals[x,])))[1,2]
})
t.test(dissimilarity.reveals,dissimilarity.stepps_11_taxa_coverage_reveals,paired=TRUE)
######################################################################################################################
#
######################################################################################################################
comparison_dissimilarities <- cbind(summary(dissimilarity.tot),
summary(dissimilarity.stepps_11_taxa_coverage_reveals),
summary(dissimilarity.reveals))
comparison_dissimilarities
rm(list=ls())
#define working directory
wd <- '~/r_code_calibration_paper/'
#----------------------------------------------------------------------------------------------------------------------------------
#run REVEALS
#----------------------------------------------------------------------------------------------------------------------------------
source(paste0(wd,'Reveals_NEUS/R/eval_ppes.R'))
#----------------------------------------------------------------------------------------------------------------------------------
#run REVEALS
#----------------------------------------------------------------------------------------------------------------------------------
source(paste0(wd,'Reveals_NEUS/R/eval_ppes.r'))
source(paste0(wd,'Reveals_NEUS/R/reveals.r'))
comparison_dissimilarities
